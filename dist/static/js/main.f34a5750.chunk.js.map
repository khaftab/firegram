{"version":3,"sources":["Firebase/config.js","hooks/useFirestore.js","Component/ImageGrid.js","Component/Title.js","hooks/useStorage.js","Component/ProgressBar.js","Component/UploadForm.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","url","setUrl","show","setShow","Row","className","map","Col","xs","md","lg","img","src","alt","onClick","handleShow","whileHover","opacity","layout","initial","animate","transition","delay","onHide","Header","closeButton","Body","Title","style","color","useStorage","file","progress","setProgress","error","setError","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","Math","round","err","a","getDownloadURL","add","createdAt","ProgressBar","setFile","console","log","now","label","animated","UploadForm","types","Form","Group","File","onChange","e","selected","target","files","includes","type","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAcAA,gBAVqB,CACnBC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAiBR,YACjBS,EAAmBT,cACnBU,EAAYV,YAAmBW,WAAWC,gBCKjCC,EApBM,SAACC,GAAgB,IAAD,EACXC,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,KAiBnC,OAfAC,qBAAU,WACR,IAAMC,EAAQV,EACXK,WAAWA,GACXM,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACX,IAAIC,EAAY,GAChBD,EAAKE,SAAQ,SAACC,GACZF,EAAUG,KAAV,2BAAoBD,EAAIE,QAAxB,IAAgCC,GAAIH,EAAIG,SAE1CX,EAAQM,MAGZ,OAAO,kBAAMJ,OACZ,CAACL,IAEG,CAAEE,S,gCC0BIa,MAzCf,WAAsB,IAAD,EACGd,mBAAS,MADZ,mBACZe,EADY,KACPC,EADO,OAEKhB,oBAAS,GAFd,mBAEZiB,EAFY,KAENC,EAFM,KAUXjB,EAASH,EAAa,UAAtBG,KAER,OACE,eAACkB,EAAA,EAAD,CAAKC,UAAU,gCAAf,UACGnB,GACCA,EAAKoB,KAAI,SAACX,GAAD,OACP,cAACY,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAxB,SACE,cAAC,IAAOC,IAAR,CACEC,IAAKjB,EAAIK,IACTa,IAAI,WACJR,UAAU,iBACVS,QAAS,kBAhBF,SAACd,GAClBC,EAAOD,GACPG,GAAQ,GAciBY,CAAWpB,EAAIK,MAC9BgB,WAAY,CAAEC,QAAS,IACvBC,QAAM,EACNC,QAAS,CAAEF,QAAS,GACpBG,QAAS,CAAEH,QAAS,GACpBI,WAAY,CAAEC,MAAO,OAVO3B,EAAIG,OAexC,eAAC,IAAD,CAAgBI,KAAMA,EAAMqB,OA5BZ,kBAAMpB,GAAQ,IA4B9B,UACE,cAAC,IAAeqB,OAAhB,CAAuBC,aAAW,IAClC,cAAC,IAAeC,KAAhB,UACE,qBAAKd,IAAKZ,EAAKa,IAAI,cAAcR,UAAU,uBCvBtCsB,MAdf,WACE,OACE,sBAAKtB,UAAU,OAAf,UACE,oBAAIA,UAAU,YAAYuB,MAAO,CAAEC,MAAO,WAA1C,sBAGA,oBAAIxB,UAAU,oBAAd,2BACA,mBAAGA,UAAU,kCAAb,kD,iCC0BSyB,EA5BI,SAACC,GAAU,IAAD,EACK9C,mBAAS,GADd,mBACpB+C,EADoB,KACVC,EADU,OAEDhD,mBAAS,IAFR,mBAEpBiD,EAFoB,KAEbC,EAFa,OAGLlD,mBAAS,MAHJ,mBAGpBe,EAHoB,KAGfC,EAHe,KAyB3B,OApBAb,qBAAU,WACR,IAAMgD,EAAa1D,EAAe2D,IAAIN,EAAKO,MACrCC,EAAgB5D,EAAiBK,WAAW,UAClDoD,EAAWI,IAAIT,GAAMU,GACnB,iBACA,SAACjD,GACC,IAAIkD,EAAclD,EAAKmD,iBAAmBnD,EAAKoD,WAAc,IAC7DX,EAAYY,KAAKC,MAAMJ,OAEzB,SAACK,GACCZ,EAASY,KAPb,sBASE,4BAAAC,EAAA,sEACoBZ,EAAWa,iBAD/B,OACQjD,EADR,OAEEC,EAAOD,GACPuC,EAAcW,IAAI,CAAElD,MAAKmD,UAAWvE,MAHtC,8CAMD,CAACmD,IAEG,CAAEC,WAAUE,QAAOlC,Q,QCjBboD,MAXf,YAAyC,IAAlBrB,EAAiB,EAAjBA,KAAMsB,EAAW,EAAXA,QAAW,EACZvB,EAAWC,GAA7BC,EAD8B,EAC9BA,SAAUhC,EADoB,EACpBA,IAGlB,OAFAsD,QAAQC,IAAIvB,EAAUhC,GACtBA,GAAOqD,EAAQ,MAEb,8BACE,cAAC,IAAD,CAAcG,IAAKxB,EAAUyB,MAAK,UAAKzB,EAAL,KAAkB0B,UAAQ,OCsBnDC,MA5Bf,WAAuB,IAAD,EACI1E,mBAAS,MADb,mBACb8C,EADa,KACPsB,EADO,OAEMpE,mBAAS,IAFf,mBAEbiD,EAFa,KAENC,EAFM,KAGdyB,EAAQ,CAAC,YAAa,cAW5B,OACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,MAAN,CAAYzD,UAAU,kBAAtB,UACE,cAACwD,EAAA,EAAKE,KAAN,CAAWC,SAbI,SAACC,GACpB,IAAMC,EAAWD,EAAEE,OAAOC,MAAM,GAC5BF,GAAYN,EAAMS,SAASH,EAASI,OACtCjB,EAAQa,GACR/B,EAAS,MAETkB,EAAQ,MACRlB,EAAS,2CAM4B9B,UAAU,eAC7C,wCAGD6B,GAAS,mBAAG7B,UAAU,cAAb,SAA4B6B,IACrCH,GAAQ,4BAAIA,EAAKO,OACjBP,GAAQ,cAAC,EAAD,CAAaA,KAAMA,EAAMsB,QAASA,QCXlCkB,MAVf,WACE,OACE,eAACC,EAAA,EAAD,CAAWnE,UAAU,MAArB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f34a5750.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDgnhOy1-cvN8WMOpw8i5fRHxLqV1MrPuE\",\r\n  authDomain: \"ninja-firegram-706f5.firebaseapp.com\",\r\n  databaseURL: \"https://ninja-firegram-706f5.firebaseio.com\",\r\n  projectId: \"ninja-firegram-706f5\",\r\n  storageBucket: \"ninja-firegram-706f5.appspot.com\",\r\n  messagingSenderId: \"854401908944\",\r\n  appId: \"1:854401908944:web:bd70755c4d410dd71e9ed5\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectFirestore, projectStorage, timestamp };\r\n","import { useEffect, useState } from \"react\";\r\nimport { projectFirestore } from \"../Firebase/config\";\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default useFirestore;\r\n","import React, { useState } from \"react\";\r\nimport useFirestore from \"../hooks/useFirestore\";\r\nimport { Row, Col, Modal as BootstrapModal } from \"react-bootstrap\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction ImageGrid() {\r\n  const [url, setUrl] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleShow = (url) => {\r\n    setUrl(url);\r\n    setShow(true);\r\n  };\r\n\r\n  const { docs } = useFirestore(\"images\");\r\n\r\n  return (\r\n    <Row className=\"d-flex justify-content-center\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <Col xs={10} md={5} lg={4} key={doc.id}>\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded\"\r\n              className=\"img-fluid mb-3\"\r\n              onClick={() => handleShow(doc.url)}\r\n              whileHover={{ opacity: 0.9 }}\r\n              layout\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 0.5 }}\r\n            />\r\n          </Col>\r\n        ))}\r\n\r\n      <BootstrapModal show={show} onHide={handleClose}>\r\n        <BootstrapModal.Header closeButton></BootstrapModal.Header>\r\n        <BootstrapModal.Body>\r\n          <img src={url} alt=\"Modal Image\" className=\"img-fluid\" />\r\n        </BootstrapModal.Body>\r\n      </BootstrapModal>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\n\r\nfunction Title() {\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <h2 className=\"text-left\" style={{ color: \"#474787\" }}>\r\n        Firegram\r\n      </h2>\r\n      <h3 className=\"text-center mt-5 \">Your Pictures</h3>\r\n      <p className=\"text-center mt-3 text-secondary\">\r\n        Click here to upload your images\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Title;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../Firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(Math.round(percentage));\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        setUrl(url);\r\n        collectionRef.add({ url, createdAt: timestamp() });\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, error, url };\r\n};\r\n\r\nexport default useStorage;\r\n","import React from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { ProgressBar as Progressbars } from \"react-bootstrap\";\r\n\r\nfunction ProgressBar({ file, setFile }) {\r\n  const { progress, url } = useStorage(file);\r\n  console.log(progress, url);\r\n  url && setFile(null);\r\n  return (\r\n    <div>\r\n      <Progressbars now={progress} label={`${progress}%`} animated />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nfunction UploadForm() {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n  const handleChange = (e) => {\r\n    const selected = e.target.files[0];\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select image file(png or jpeg)\");\r\n    }\r\n  };\r\n  return (\r\n    <Form>\r\n      <Form.Group className=\"input-container\">\r\n        <Form.File onChange={handleChange} className=\"file-input\" />\r\n        <span>+</span>\r\n      </Form.Group>\r\n\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      {file && <p>{file.name}</p>}\r\n      {file && <ProgressBar file={file} setFile={setFile} />}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n","import { Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport ImageGrid from \"./Component/ImageGrid\";\nimport Title from \"./Component/Title\";\nimport UploadForm from \"./Component/UploadForm\";\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}